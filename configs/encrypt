#!/usr/bin/env zx
const crypto = require("crypto");

const key = await question("Encryption passphrase: ");
const input_file = await question("file to encrypt: ");
const out_file = await question("Target path: ");

const file_content = await fs.readFile(input_file);
const salt_buffer = crypto.randomBytes(16);
const iv = crypto.randomBytes(16);

const keyBuffer = crypto.pbkdf2Sync(key, salt_buffer, 10000, 32, "sha256")
const cipher = crypto.createCipheriv('aes-256-cbc', keyBuffer, iv);

let encrypted = cipher.update(file_content);
encrypted = Buffer.concat([encrypted, cipher.final()]);

const buffer = Buffer.concat([salt_buffer, iv, encrypted]);
await fs.writeFile(out_file, buffer)
